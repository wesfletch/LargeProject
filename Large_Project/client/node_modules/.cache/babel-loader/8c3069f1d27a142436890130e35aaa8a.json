{"ast":null,"code":"var _jsxFileName = \"/Users/chelsea/Downloads/MERN-Stack/client/src/Components/EditFavorite.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport FavoriteItem from './FavoriteItem';\nimport AllServices from '../Services/AllServices';\nimport Message from './Message';\nimport { AuthContext } from '../Context/AuthContext';\n\nconst EditFavorite = props => {\n  const id = useParams();\n  const [favorite, setFavorite] = useState({\n    _id: id\n  });\n  const [favorites, setFavorites] = useState([]);\n  const [message, setMessage] = useState(null);\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    AllServices.getFavorites().then(data => {\n      setFavorites(data.favorites);\n    });\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    AllServices.postFavorite(favorite).then(data => {\n      const {\n        message\n      } = data;\n      resetForm();\n\n      if (!message.msgError) {\n        AllServices.getFavorites().then(getData => {\n          setFavorites(getData.favorites);\n          setMessage(message);\n        });\n      } else if (message.msgBody === \"UnAuthorized\") {\n        setMessage(message);\n        authContext.setUser({\n          email: \"\"\n        });\n        authContext.setIsAuthenticated(false);\n      } else {\n        setMessage(message);\n      }\n    });\n  };\n\n  const onChange = e => {\n    setFavorite({\n      name: e.target.value\n    });\n  };\n\n  const resetForm = () => {\n    setFavorite({\n      name: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, friends.map(friend => {\n    return /*#__PURE__*/React.createElement(FriendItem, {\n      key: friend._id,\n      friend: friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"friend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Enter Friend Information\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"friend\",\n    value: friend.name,\n    onChange: onChange,\n    className: \"form-control\",\n    placeholder: \"Please Enter Friend's Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-lg btn-primary btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Submit\")), message ? /*#__PURE__*/React.createElement(Message, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }\n  }) : null);\n};\n\nexport default EditFavorite;","map":{"version":3,"sources":["/Users/chelsea/Downloads/MERN-Stack/client/src/Components/EditFavorite.js"],"names":["React","useState","useContext","useEffect","useParams","FavoriteItem","AllServices","Message","AuthContext","EditFavorite","props","id","favorite","setFavorite","_id","favorites","setFavorites","message","setMessage","authContext","getFavorites","then","data","onSubmit","e","preventDefault","postFavorite","resetForm","msgError","getData","msgBody","setUser","email","setIsAuthenticated","onChange","name","target","value","friends","map","friend"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport FavoriteItem from './FavoriteItem';\nimport AllServices from '../Services/AllServices';\nimport Message from './Message';\nimport { AuthContext } from '../Context/AuthContext';\n\nconst EditFavorite = props =>{\n    const id = useParams();\n    \n    const [favorite,setFavorite] = useState({_id: id});\n    const [favorites,setFavorites] = useState([]);\n    const [message,setMessage] = useState(null);\n    const authContext = useContext(AuthContext);\n    \n    useEffect(()=>{\n        AllServices.getFavorites().then(data =>{\n            setFavorites(data.favorites);\n        });\n    },[]);\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        AllServices.postFavorite(favorite).then(data =>{\n            const { message } = data;\n            resetForm();\n            if(!message.msgError){\n                AllServices.getFavorites().then(getData =>{\n                    setFavorites(getData.favorites);\n                    setMessage(message);\n                });\n            }\n            else if(message.msgBody === \"UnAuthorized\"){\n                setMessage(message);\n                authContext.setUser({email : \"\"});\n                authContext.setIsAuthenticated(false);\n            }\n            else{\n                setMessage(message);\n            }\n        });\n    }\n\n    const onChange = e =>{\n        setFavorite({name : e.target.value});\n    }\n\n    const resetForm = ()=>{\n        setFavorite({name : \"\"});\n    }\n\n    return(\n        <div>\n            <ul className=\"list-group\">\n                {\n                    friends.map(friend =>{\n                        return <FriendItem key={friend._id} friend={friend}/>\n                    })\n                }\n            </ul>\n            <br/>\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"friend\">Enter Friend Information</label>\n                <input type=\"text\" \n                       name=\"friend\" \n                       value={friend.name} \n                       onChange={onChange}\n                       className=\"form-control\"\n                       placeholder=\"Please Enter Friend's Name\"/>\n                <button className=\"btn btn-lg btn-primary btn-block\" \n                        type=\"submit\">Submit</button>\n            </form>\n            {message ? <Message message={message}/> : null}\n        </div>\n    );\n\n}\n\nexport default EditFavorite;"]},"metadata":{},"sourceType":"module"}