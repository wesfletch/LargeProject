{"ast":null,"code":"export default {\n  getFriends: () => {\n    return fetch('/user/friends').then(response => {\n      if (response.status !== 401) {\n        return response.json().then(data => data);\n      } else return {\n        message: {\n          msgBody: \"UnAuthorized5\",\n          msgError: true\n        }\n      };\n    });\n  },\n  postFriend: friend => {\n    return fetch('/user/friend', {\n      method: \"post\",\n      body: JSON.stringify(friend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status !== 401) {\n        return response.json().then(data => data);\n      } else return {\n        message: {\n          msgBody: \"UnAuthorized6\"\n        },\n        msgError: true\n      };\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chelsea/Downloads/MERN-Stack/client/src/Services/FriendService.js"],"names":["getFriends","fetch","then","response","status","json","data","message","msgBody","msgError","postFriend","friend","method","body","JSON","stringify","headers"],"mappings":"AAAA,eAAe;AACXA,EAAAA,UAAU,EAAG,MAAI;AACb,WAAOC,KAAK,CAAC,eAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAE;AACZ,UAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvB,eAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBI,IAAI,IAAIA,IAA7B,CAAP;AACH,OAFD,MAII,OAAO;AAACC,QAAAA,OAAO,EAAG;AAACC,UAAAA,OAAO,EAAG,eAAX;AAA2BC,UAAAA,QAAQ,EAAG;AAAtC;AAAX,OAAP;AACP,KAPF,CAAP;AAQH,GAVU;AAWXC,EAAAA,UAAU,EAAGC,MAAM,IAAE;AACjB,WAAOV,KAAK,CAAC,cAAD,EAAgB;AACxBW,MAAAA,MAAM,EAAG,MADe;AAExBC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFiB;AAGxBK,MAAAA,OAAO,EAAC;AACJ,wBAAiB;AADb;AAHgB,KAAhB,CAAL,CAMJd,IANI,CAMCC,QAAQ,IAAE;AACd,UAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvB,eAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBI,IAAI,IAAIA,IAA7B,CAAP;AACH,OAFD,MAII,OAAO;AAACC,QAAAA,OAAO,EAAG;AAACC,UAAAA,OAAO,EAAG;AAAX,SAAX;AAAuCC,QAAAA,QAAQ,EAAG;AAAlD,OAAP;AACP,KAZM,CAAP;AAaH;AAzBU,CAAf","sourcesContent":["export default {\n    getFriends : ()=>{\n        return fetch('/user/friends')\n                .then(response=>{\n                    if(response.status !== 401){\n                        return response.json().then(data => data);\n                    }\n                    else\n                        return {message : {msgBody : \"UnAuthorized5\",msgError : true}};\n                });\n    },\n    postFriend : friend=>{\n        return fetch('/user/friend',{\n            method : \"post\",\n            body : JSON.stringify(friend),\n            headers:{\n                'Content-Type' : 'application/json'\n            }\n        }).then(response=>{\n            if(response.status !== 401){\n                return response.json().then(data => data);\n            }\n            else\n                return {message : {msgBody : \"UnAuthorized6\"},msgError : true};\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}