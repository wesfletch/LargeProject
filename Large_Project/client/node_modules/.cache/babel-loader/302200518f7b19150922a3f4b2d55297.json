{"ast":null,"code":"var _jsxFileName = \"/Users/chelsea/Downloads/MERN-Stack/client/src/Context/AuthContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport AuthService from '../Services/AuthService';\nexport const AuthContext = createContext();\nexport default (_ref => {\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    AuthService.isAuthenticated().then(data => {\n      setUser(data.user);\n      setIsAuthenticated(data.isAuthenticated);\n      setIsLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, !isLoaded ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      isAuthenticated,\n      setIsAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, children));\n});","map":{"version":3,"sources":["/Users/chelsea/Downloads/MERN-Stack/client/src/Context/AuthContext.js"],"names":["React","createContext","useState","useEffect","AuthService","AuthContext","children","user","setUser","isAuthenticated","setIsAuthenticated","isLoaded","setIsLoaded","then","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA6BC,QAA7B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEP,gBAAe,QAAgB;AAAA,MAAf;AAAEK,IAAAA;AAAF,GAAe;AAC3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACO,eAAD,EAAiBC,kBAAjB,IAAuCR,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACS,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAAC,KAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,WAAW,CAACK,eAAZ,GAA8BI,IAA9B,CAAmCC,IAAI,IAAG;AACtCN,MAAAA,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP;AACAG,MAAAA,kBAAkB,CAACI,IAAI,CAACL,eAAN,CAAlB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAKH,GANQ,EAMP,EANO,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACD,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,gBACD,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACJ,MAAAA,IAAD;AAAMC,MAAAA,OAAN;AAAcC,MAAAA,eAAd;AAA8BC,MAAAA;AAA9B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,QADN,CAFJ,CADJ;AAQH,CArBD","sourcesContent":["import React, {createContext,useState,useEffect} from 'react';\nimport AuthService from '../Services/AuthService';\n\nexport const AuthContext = createContext();\n\nexport default ({ children })=>{\n    const [user,setUser] = useState(null);\n    const [isAuthenticated,setIsAuthenticated] = useState(false);\n    const [isLoaded,setIsLoaded] = useState(false);\n\n    useEffect(()=>{\n        AuthService.isAuthenticated().then(data =>{\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    },[]);\n\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading</h1> : \n            <AuthContext.Provider value={{user,setUser,isAuthenticated,setIsAuthenticated}}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}