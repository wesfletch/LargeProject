{"version":3,"sources":["components/Login.js","pages/LoginPage.js","App.js","reportWebVitals.js","components/PlaylistTable.js","components/NavigationBar.js","components/Home.js","pages/HomePage.js","components/Register.js","pages/RegisterPage.js","components/CreatePlaylist.js","pages/CreatePlaylistPage.js","index.js"],"names":["Login","email","password","doLogin","event","a","preventDefault","obj","value","js","JSON","stringify","fetch","method","credentials","body","headers","response","text","parse","isAuthenticated","window","location","href","alert","toString","class","type","id","name","Button","variant","size","onClick","Form","Group","Control","placeholder","ref","c","LoginPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PlaylistTable","useState","playlists","setPlaylists","rows","setRows","deleted","setDeleted","doDeletePlaylist","sessionStorage","getItem","message","msgError","items","filter","row","useEffect","json","getPlaylists","length","i","x","replaceAll","push","setItem","_id","map","r","NavigationBar","doCreatePlaylist","doLogout","success","Home","src","HomePage","Register","Label","RegisterPage","CreatePlaylist","document","cookie","CreatePlaylistPage","ReactDOM","render","StrictMode","path","element","getElementById"],"mappings":"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","file":"static/js/main.88249121.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Form, Button} from 'react-bootstrap';\n\nfunction Login()\n{\n    function getPath()\n    {\n        if (process.env.NODE_ENV === 'production')\n        {\n            return 'https://poosd-f2021-11.herokuapp.com/users/login';\n        }\n        else\n        {\n            return 'http://localhost:5000/users/login';\n        }\n    }\n    var email;\n    var password;\n\n    const doLogin = async event =>\n    {\n        event.preventDefault();\n        //alert(\"test\" + email.value + password.value);\n        var obj = {email:email.value, password:password.value};\n        var js = JSON.stringify(obj);\n        try\n        {\n            const response = await fetch(getPath(), {method:'POST',credentials: 'include', body:js,headers:{'Content-Type':'application/json'}});\n            var res = JSON.parse(await response.text());\n            if (res.isAuthenticated)\n            {\n                //alert(\"access_token=\" + res.token);\n                //document.cookie = \"access_token=\" + res.token;\n                //localStorage.setItem('token', res.token);\n                window.location.href = '/home';\n            }\n        }\n        catch(e)\n        {\n            alert(js + e.toString());\n            return;\n        }\n    };\n\n    return (\n        <body class=\"bodies\">\n            <input type=\"hidden\" id=\"anPageName\" name=\"page\" value=\"login\" />\n            <div class=\"container-center-horizontal\">\n            <div class=\"login screen\">\n                <div class=\"overlap-group\">\n                <div class=\"background\"></div>\n                <div class=\"button\">\n                    <Button variant='signInBtn' size=\"big\" onClick={doLogin}>\n                        Sign In\n                    </Button>\n                </div>\n                <div class=\"continue-as-guest\">Continue As Guest</div>\n                <div class=\"dont-have-an-account\">Don’t have an account?</div>\n                <div class=\"rectangle-58\">\n                    <Form>\n                        <Form.Group class=\"formElement\">\n                            <Form.Control type=\"password\" placeholder=\"Enter password here\" ref={(c) => password = c}/>\n                        </Form.Group>\n                    </Form>\n                </div>\n                <div class=\"password\">Password</div>\n                <div class=\"rectangle-57\">\n                    <Form>\n                        <Form.Group class=\"formElement\">\n                            <Form.Control type=\"email\" placeholder=\"123@gmail.com\" ref={(c) => email = c}/>\n                        </Form.Group>\n                    </Form>\n                </div>\n                <div class=\"e-mail\">Email</div>\n                <div class=\"log-in\">Log in</div>\n                <h1 class=\"title\">Welcome To shareTunes</h1>\n                </div>\n            </div>\n            </div>\n        </body>\n    );\n};\n\nexport default Login;","import React from 'react';\n\nimport Login from '../components/Login';\n\nconst LoginPage = () =>\n{\n\n    return(\n      <div class=\"main\">\n        <Login />\n      </div>\n    );\n};\n\nexport default LoginPage;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoginPage from './pages/LoginPage';\nimport './App.css';\nimport './login.css';\nimport './home-page.css';\nimport './create-new-playlist.css';\nimport './styleguide.css';\nimport './globals.css';\n\nfunction App() {\n  return (\n    <LoginPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useEffect, useState} from 'react';\nimport {Button} from 'react-bootstrap';\n\nfunction PlaylistTable()\n{\n    const [playlists, setPlaylists] = useState(null);\n    const [rows, setRows] = useState([]);\n    const [deleted, setDeleted] = useState(null);\n    function getPath()\n    {\n        if (process.env.NODE_ENV === 'production')\n        {\n            return 'https://poosd-f2021-11.herokuapp.com/users/playlist/';\n        }\n        else\n        {\n            return 'http://localhost:5000/users/playlist/';\n        }\n    }\n    async function doDeletePlaylist(name) {\n        //event.preventDefault();\n        var id = sessionStorage.getItem(name);\n        try\n        {\n            const response = await fetch(getPath() + id, {method:'DELETE',credentials:'include',headers:{'Content-Type':'application/json'}});\n            var res = JSON.parse(await response.text());\n            if (!res.message.msgError)\n            {\n                let items = rows.filter(row => row != name);\n                setDeleted(deleted + 1);\n                setRows(items);\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }\n    }\n    function getOtherPath()\n    {\n        if (process.env.NODE_ENV === 'production')\n        {\n            return 'https://poosd-f2021-11.herokuapp.com/users/playlists';\n        }\n        else\n        {\n            return 'http://localhost:5000/users/playlists';\n        }\n    }\n    useEffect(() => {\n        async function getPlaylists() {\n            let response = await fetch(getOtherPath(), {method:'GET',credentials:'include',headers:{'Content-Type':'application/json'}});\n            response = await response.json();\n            setPlaylists(response);\n        }\n        getPlaylists();\n    }, []);\n    if (playlists != null)\n    {\n        if (rows.length == 0 && deleted == null)\n        {\n            setDeleted(0);\n            const items = [];\n            for (var i = 0; i < playlists.playlists.length; i++)\n            {\n                var x = JSON.stringify(playlists.playlists[i].name).replaceAll('\"','');\n                items.push(x);\n                sessionStorage.setItem(playlists.playlists[i].name, playlists.playlists[i]._id);\n            }\n            setRows(items);\n        }\n        if (rows.length != (playlists.playlists.length - deleted))\n        {\n            return null;\n        }\n        return (\n            <div>\n                <table>\n                    {rows.map((r) => (\n                        <tr>\n                            <td>{r}</td>\n                            <Button variant='signInBtn' size=\"big\" onClick={async () => {await doDeletePlaylist(r);}}>\n                            Delete\n                            </Button>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n        );\n    }\n    else\n    {\n        return null;\n    }\n};\n\nexport default PlaylistTable;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Form, Button} from 'react-bootstrap';\n\nfunction NavigationBar()\n{\n    function getPath()\n    {\n        if (process.env.NODE_ENV === 'production')\n        {\n            return 'https://poosd-f2021-11.herokuapp.com/users/logout';\n        }\n        else\n        {\n            return 'http://localhost:5000/users/logout';\n        }\n    }\n    const doCreatePlaylist = async event =>\n    {\n        window.location.href = '/createPlaylist';\n    };\n    const doLogout = async event =>\n    {\n        event.preventDefault();\n        try\n        {\n            const response = await fetch(getPath(), {method:'GET',credentials:'include',headers:{'Content-Type':'application/json'}});\n            var res = JSON.parse(await response.text());\n            if (res.success)\n            {\n                window.location.href = '/';\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }\n    };\n    return (\n        <div class=\"flex-col\">\n            <div class=\"place oswald-normal-lilac-bush-17px\">HOME</div>\n            <div class=\"welcomeBtn oswald-normal-white-17px\">\n                <Button variant='welcomeBtn' size=\"biggish\" onClick={doCreatePlaylist}>\n                    Create New Playlist\n                </Button>\n            </div>\n            <div class=\"recommend-songs oswald-normal-white-17px\">Recommend Songs</div>\n            <div class=\"friends oswald-normal-white-17px\">Friends</div>\n            <div class=\"profile oswald-normal-white-17px\">Profile</div>\n            <div class=\"logout oswald-normal-white-17px\">\n                <Button variant='welcomeBtn' size=\"biggish\" onClick={doLogout}>\n                    Logout\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default NavigationBar;","import React, { useState, useEffect } from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport PlaylistTable from '../components/PlaylistTable';\nimport NavigationBar from '../components/NavigationBar';\n\nfunction Home()\n{\n    return (\n        <body class=\"bodies\">\n            <input type=\"hidden\" id=\"anPageName\" name=\"page\" value=\"home-page\" />\n            <div class=\"container-center-horizontal\">\n            <div class=\"home-page screen\">\n                <div class=\"overlap-group-container\">\n                <div class=\"overlap-group2\">\n                    <div class=\"sidebar\"></div>\n                    <div class=\"menu\">\n                    <img class=\"marker\" src=\"img/marker@2x.svg\" />\n                    <NavigationBar/>\n                    </div>\n                </div>\n                <div class=\"overlap-group1 border-1px-black-3\">\n                    <div class=\"welcome-display-name oswald-normal-black-40px\">Welcome “Display Name”</div>\n                    <div class=\"rectangle-50\"></div>\n                    <div class=\"your-playlists oswald-normal-black-30px\">Your Playlists</div>\n                    <div class=\"rectangle-55\">\n                    <PlaylistTable/>\n                    </div>\n                    <img class=\"line-1\" src=\"img/line-1@1x.svg\" />\n                    <div class=\"quick-recommend oswald-normal-black-40px\">Quick Recommend</div>\n                    <div class=\"button\">\n                    <div class=\"recommend-songs-1 oswald-normal-black-30px-2\">Recommend Songs From Your Favorites</div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </body>\n    );\n};\n\nexport default Home;","import React from 'react';\n\nimport Home from '../components/Home';\n\nconst HomePage = () =>\n{\n\n    return(\n      <div class=\"main\">\n        <Home />\n      </div>\n    );\n};\n\nexport default HomePage;","import React, { useState } from 'react';\nimport {Form, Button} from 'react-bootstrap';\n\nfunction Register()\n{\n    var email, password, password2, displayName;\n    return (\n        <div class=\"row\">\n            <div class=\"col-lg-3 col-md-2 col-sm-1\"></div>\n            <div class=\"col-lg-6 col-md-8 col-sm-10\">\n                <div class=\"mainForms\">\n                    <h1 class=\"signIn\">Register</h1>\n                    <div class=\"forms\">\n                        <Form>\n                            <Form.Group class=\"formElement\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"123@gmail.com\" ref={(c) => email = c}/>\n                            </Form.Group>\n                        </Form>\n                        <Form>\n                            <Form.Group class=\"formElement\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Enter password here\" ref={(c) => password = c}/>\n                            </Form.Group>\n                        </Form>\n                        <Form>\n                            <Form.Group class=\"formElement\">\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Enter password here\" ref={(c) => password2 = c}/>\n                            </Form.Group>\n                        </Form>\n                        <Form>\n                            <Form.Group class=\"formElement\">\n                                <Form.Label>Display Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter password here\" ref={(c) => displayName = c}/>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                    <div class=\"signIn\">\n                        <Button variant='signInBtn' size=\"big\">\n                            Register\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-2 col-sm-1\"></div>\n        </div>\n    );\n};\n\nexport default Register;","import React from 'react';\n\nimport Register from '../components/Register';\n\nconst RegisterPage = () =>\n{\n\n    return(\n      <div class=\"main\">\n        <Register />\n      </div>\n    );\n};\n\nexport default RegisterPage;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Form, Button} from 'react-bootstrap';\nimport NavigationBar from '../components/NavigationBar';\n\nfunction CreatePlaylist()\n{\n    function getPath()\n    {\n        if (process.env.NODE_ENV === 'production')\n        {\n            return 'https://poosd-f2021-11.herokuapp.com/users/addplaylist';\n        }\n        else\n        {\n            return 'http://localhost:5000/users/addplaylist';\n        }\n    }\n    var name;\n    const doCreatePlaylist = async event =>\n    {\n        event.preventDefault();\n        var obj = {name:name.value};\n        var js = JSON.stringify(obj);\n        try\n        {\n            const response = await fetch(getPath(), {method:'POST',credentials: 'include', body:js,headers:{'Content-Type':'application/json'}});\n            var res = JSON.parse(await response.text());\n            //alert(res);\n            window.location.href = '/home';\n        }\n        catch(e)\n        {\n            alert(js + e.toString() + document.cookie);\n            return;\n        }\n    };\n    return (\n        <body class=\"bodies\">\n            <input type=\"hidden\" id=\"anPageName\" name=\"page\" value=\"create-new-playlist\" />\n            <div class=\"container-center-horizontal\">\n            <div class=\"create-new-playlist screen\">\n                <div class=\"overlap-group-container\">\n                <div class=\"overlap-group2\">\n                    <div class=\"sidebar\"></div>\n                    <div class=\"menu\">\n                    <img class=\"marker\" src=\"img/marker@2x.svg\" />\n                    <NavigationBar/>\n                    </div>\n                </div>\n                <div class=\"overlap-group1 border-1px-black-3\">\n                    <div class=\"create-new-playlist-2 oswald-normal-black-40px\">Create New Playlist</div>\n                    <div class=\"rectangle-50\"></div>\n                    <div class=\"playlist-name oswald-normal-black-30px\">Playlist name</div>\n                    <div class=\"rectangle-55\">\n                        <Form>\n                            <Form.Group class=\"formElement\">\n                                <Form.Control type=\"text\" placeholder=\"Best of Hamilton\" ref={(c) => name = c}/>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                    <div class=\"would-you-like-to-cr oswald-normal-black-30px\">\n                    Would you like to create a playlist with a friend? (Optional)\n                    </div>\n                    <div class=\"rectangle-54\"></div>\n                    <div class=\"button\">\n                        <Button variant='signInBtn' size=\"big\" onClick={doCreatePlaylist}>\n                            Create New Playlist\n                        </Button>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </body>\n    );\n    /*return (\n        <div class=\"row\">\n            <div class=\"col-lg-3 col-md-2 col-sm-1\"></div>\n            <div class=\"col-lg-6 col-md-8 col-sm-10\">\n                <div class=\"mainForms\">\n                    <h1 class=\"signIn\">Create a New Playlist</h1>\n                    <div class=\"forms\">\n                        <Form>\n                            <Form.Group class=\"formElement\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Best of Hamilton\" ref={(c) => name = c}/>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                    <div class=\"signIn\">\n                        <Button variant='signInBtn' size=\"big\" onClick={doCreatePlaylist}>\n                            Create Playlist\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-2 col-sm-1\"></div>\n        </div>\n    );*/\n};\n\nexport default CreatePlaylist;","import React from 'react';\n\nimport CreatePlaylist from '../components/CreatePlaylist';\n\nconst CreatePlaylistPage = () =>\n{\n\n    return(\n      <div class=\"main\">\n        <CreatePlaylist />\n      </div>\n    );\n};\n\nexport default CreatePlaylistPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport HomePage from './pages/HomePage';\nimport RegisterPage from './pages/RegisterPage';\nimport CreatePlaylistPage from './pages/CreatePlaylistPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"home\" element={<HomePage />} />\n        <Route path=\"register\" element={<RegisterPage />} />\n        <Route path=\"createPlaylist\" element={<CreatePlaylistPage />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}